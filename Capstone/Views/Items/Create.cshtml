@model Capstone.Models.Items

@{
    ViewBag.Title = "Create";
}


<h2>Create A Listing</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Item(s) For Sale</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        
        <div class="form-group">
            @Html.LabelFor(model => model.ItemPhoto, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" name="ItemPhoto" id="fileUpload" accept=".png,.jpg,.jpeg,.gif,.tif" />
                @*@Html.EditorFor(model => model.UserPhoto, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UserPhoto, "", new { @class = "text-danger" })*@
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ItemName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ItemName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ItemName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Category, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @{ 
                    <select class="form-control" id="Category" name="Category">
                        <option value="Furniture">Furniture</option>
                        <option value="Children Toys">Children Toys</option>
                        <option value="Clothing">Clothing</option>
                        <option value="Electronics">Electronics</option>
                        <option value="Home Decor">Home Decor</option>
                    </select>
                }
                @*@Html.ValidationMessageFor(model => model.Category, "", new { @class = "text-danger" })*@
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Condition, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @{
                    <select class="form-control" id="Condition" name="Condition">
                        <option value="Brand New/Unopened">Brand New/Unopened</option>
                        <option value="Like New/Opened">Like New/Opened</option>
                        <option value="Used/Very Good">Used/Very Good</option>
                        <option value="Used/Acceptable">Used/Acceptable</option>
                    </select>
                }
                @*@Html.ValidationMessageFor(model => model.Condition, "", new { @class = "text-danger" })*@
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Summary, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Summary, 6, 40, new { placeholder ="Enter details about your item here...", htmlAttributes = new { @class = "form-control" } })
                    @*the 6 is the height and 40 is the width*@
                @*@Html.ValidationMessageFor(model => model.Summary, "", new { @class = "text-danger" })*@
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
